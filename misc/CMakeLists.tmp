cmake_minimum_required(VERSION 3.2.0 FATAL_ERROR)
project(libxutils LANGUAGES C)

IF (WIN32)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /Od /W3")
ELSE()
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -O2 -Wall")
ENDIF()

set(XUTILS_INSTALL_PREFIX "_INSTALL_PREFIX_")
string(SUBSTRING "${XUTILS_INSTALL_PREFIX}" 0 2 PREFIX_START)

if("${PREFIX_START}" STREQUAL "./")
  get_filename_component(CURRENT_WORKING_DIR "${CMAKE_SOURCE_DIR}" REALPATH)
  string(SUBSTRING "${XUTILS_INSTALL_PREFIX}" 1 -1 RELATIVE_PATH)
  set(CMAKE_INSTALL_PREFIX "${CURRENT_WORKING_DIR}${RELATIVE_PATH}")
endif()

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)

_SSL_OBJECT_

SET(HEADER_DST "include/xutils")
SET(SOURCE_DIR "./src")
SET(CRYPT_DIR "./src/crypt")
SET(DATA_DIR "./src/data")
SET(NET_DIR "./src/net")
SET(SYS_DIR "./src/sys")

include_directories(
    ${SOURCE_DIR}
    ${CRYPT_DIR}
    ${DATA_DIR}
    ${NET_DIR}
    ${SYS_DIR}
)

add_library(xutils STATIC
    _SOURCE_LIST_
)

install(TARGETS xutils DESTINATION lib)

install(DIRECTORY "${SOURCE_DIR}/"
    DESTINATION "${HEADER_DST}"
    FILES_MATCHING
    PATTERN "*.h"
)

install(DIRECTORY "${CRYPT_DIR}/"
    DESTINATION "${HEADER_DST}"
    FILES_MATCHING
    PATTERN "*.h"
)

install(DIRECTORY "${DATA_DIR}/"
    DESTINATION "${HEADER_DST}"
    FILES_MATCHING
    PATTERN "*.h"
)

install(DIRECTORY "${NET_DIR}/"
    DESTINATION "${HEADER_DST}"
    FILES_MATCHING
    PATTERN "*.h"
)

install(DIRECTORY "${SYS_DIR}/"
    DESTINATION "${HEADER_DST}"
    FILES_MATCHING
    PATTERN "*.h"
)